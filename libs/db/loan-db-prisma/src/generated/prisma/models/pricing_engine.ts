
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `pricing_engine` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model pricing_engine
 * 
 */
export type pricing_engineModel = runtime.Types.Result.DefaultSelection<Prisma.$pricing_enginePayload>

export type AggregatePricing_engine = {
  _count: Pricing_engineCountAggregateOutputType | null
  _avg: Pricing_engineAvgAggregateOutputType | null
  _sum: Pricing_engineSumAggregateOutputType | null
  _min: Pricing_engineMinAggregateOutputType | null
  _max: Pricing_engineMaxAggregateOutputType | null
}

export type Pricing_engineAvgAggregateOutputType = {
  id: number | null
  minimum_interest_rate: runtime.Decimal | null
  loan_term_in_months: number | null
}

export type Pricing_engineSumAggregateOutputType = {
  id: number | null
  minimum_interest_rate: runtime.Decimal | null
  loan_term_in_months: number | null
}

export type Pricing_engineMinAggregateOutputType = {
  id: number | null
  minimum_interest_rate: runtime.Decimal | null
  created_at: Date | null
  updated_at: Date | null
  program: string | null
  loan_term_in_months: number | null
}

export type Pricing_engineMaxAggregateOutputType = {
  id: number | null
  minimum_interest_rate: runtime.Decimal | null
  created_at: Date | null
  updated_at: Date | null
  program: string | null
  loan_term_in_months: number | null
}

export type Pricing_engineCountAggregateOutputType = {
  id: number
  minimum_interest_rate: number
  created_at: number
  updated_at: number
  program: number
  loan_term_in_months: number
  _all: number
}


export type Pricing_engineAvgAggregateInputType = {
  id?: true
  minimum_interest_rate?: true
  loan_term_in_months?: true
}

export type Pricing_engineSumAggregateInputType = {
  id?: true
  minimum_interest_rate?: true
  loan_term_in_months?: true
}

export type Pricing_engineMinAggregateInputType = {
  id?: true
  minimum_interest_rate?: true
  created_at?: true
  updated_at?: true
  program?: true
  loan_term_in_months?: true
}

export type Pricing_engineMaxAggregateInputType = {
  id?: true
  minimum_interest_rate?: true
  created_at?: true
  updated_at?: true
  program?: true
  loan_term_in_months?: true
}

export type Pricing_engineCountAggregateInputType = {
  id?: true
  minimum_interest_rate?: true
  created_at?: true
  updated_at?: true
  program?: true
  loan_term_in_months?: true
  _all?: true
}

export type Pricing_engineAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which pricing_engine to aggregate.
   */
  where?: Prisma.pricing_engineWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of pricing_engines to fetch.
   */
  orderBy?: Prisma.pricing_engineOrderByWithRelationInput | Prisma.pricing_engineOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.pricing_engineWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` pricing_engines from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` pricing_engines.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned pricing_engines
  **/
  _count?: true | Pricing_engineCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Pricing_engineAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Pricing_engineSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Pricing_engineMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Pricing_engineMaxAggregateInputType
}

export type GetPricing_engineAggregateType<T extends Pricing_engineAggregateArgs> = {
      [P in keyof T & keyof AggregatePricing_engine]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePricing_engine[P]>
    : Prisma.GetScalarType<T[P], AggregatePricing_engine[P]>
}




export type pricing_engineGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.pricing_engineWhereInput
  orderBy?: Prisma.pricing_engineOrderByWithAggregationInput | Prisma.pricing_engineOrderByWithAggregationInput[]
  by: Prisma.Pricing_engineScalarFieldEnum[] | Prisma.Pricing_engineScalarFieldEnum
  having?: Prisma.pricing_engineScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Pricing_engineCountAggregateInputType | true
  _avg?: Pricing_engineAvgAggregateInputType
  _sum?: Pricing_engineSumAggregateInputType
  _min?: Pricing_engineMinAggregateInputType
  _max?: Pricing_engineMaxAggregateInputType
}

export type Pricing_engineGroupByOutputType = {
  id: number
  minimum_interest_rate: runtime.Decimal
  created_at: Date | null
  updated_at: Date | null
  program: string
  loan_term_in_months: number
  _count: Pricing_engineCountAggregateOutputType | null
  _avg: Pricing_engineAvgAggregateOutputType | null
  _sum: Pricing_engineSumAggregateOutputType | null
  _min: Pricing_engineMinAggregateOutputType | null
  _max: Pricing_engineMaxAggregateOutputType | null
}

type GetPricing_engineGroupByPayload<T extends pricing_engineGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Pricing_engineGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Pricing_engineGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Pricing_engineGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Pricing_engineGroupByOutputType[P]>
      }
    >
  >



export type pricing_engineWhereInput = {
  AND?: Prisma.pricing_engineWhereInput | Prisma.pricing_engineWhereInput[]
  OR?: Prisma.pricing_engineWhereInput[]
  NOT?: Prisma.pricing_engineWhereInput | Prisma.pricing_engineWhereInput[]
  id?: Prisma.IntFilter<"pricing_engine"> | number
  minimum_interest_rate?: Prisma.DecimalFilter<"pricing_engine"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  created_at?: Prisma.DateTimeNullableFilter<"pricing_engine"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"pricing_engine"> | Date | string | null
  program?: Prisma.StringFilter<"pricing_engine"> | string
  loan_term_in_months?: Prisma.IntFilter<"pricing_engine"> | number
}

export type pricing_engineOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  minimum_interest_rate?: Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  program?: Prisma.SortOrder
  loan_term_in_months?: Prisma.SortOrder
}

export type pricing_engineWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.pricing_engineWhereInput | Prisma.pricing_engineWhereInput[]
  OR?: Prisma.pricing_engineWhereInput[]
  NOT?: Prisma.pricing_engineWhereInput | Prisma.pricing_engineWhereInput[]
  minimum_interest_rate?: Prisma.DecimalFilter<"pricing_engine"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  created_at?: Prisma.DateTimeNullableFilter<"pricing_engine"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"pricing_engine"> | Date | string | null
  program?: Prisma.StringFilter<"pricing_engine"> | string
  loan_term_in_months?: Prisma.IntFilter<"pricing_engine"> | number
}, "id">

export type pricing_engineOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  minimum_interest_rate?: Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  program?: Prisma.SortOrder
  loan_term_in_months?: Prisma.SortOrder
  _count?: Prisma.pricing_engineCountOrderByAggregateInput
  _avg?: Prisma.pricing_engineAvgOrderByAggregateInput
  _max?: Prisma.pricing_engineMaxOrderByAggregateInput
  _min?: Prisma.pricing_engineMinOrderByAggregateInput
  _sum?: Prisma.pricing_engineSumOrderByAggregateInput
}

export type pricing_engineScalarWhereWithAggregatesInput = {
  AND?: Prisma.pricing_engineScalarWhereWithAggregatesInput | Prisma.pricing_engineScalarWhereWithAggregatesInput[]
  OR?: Prisma.pricing_engineScalarWhereWithAggregatesInput[]
  NOT?: Prisma.pricing_engineScalarWhereWithAggregatesInput | Prisma.pricing_engineScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"pricing_engine"> | number
  minimum_interest_rate?: Prisma.DecimalWithAggregatesFilter<"pricing_engine"> | runtime.Decimal | runtime.DecimalJsLike | number | string
  created_at?: Prisma.DateTimeNullableWithAggregatesFilter<"pricing_engine"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableWithAggregatesFilter<"pricing_engine"> | Date | string | null
  program?: Prisma.StringWithAggregatesFilter<"pricing_engine"> | string
  loan_term_in_months?: Prisma.IntWithAggregatesFilter<"pricing_engine"> | number
}

export type pricing_engineUpdateInput = {
  minimum_interest_rate?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  program?: Prisma.StringFieldUpdateOperationsInput | string
  loan_term_in_months?: Prisma.IntFieldUpdateOperationsInput | number
}

export type pricing_engineUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  minimum_interest_rate?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  program?: Prisma.StringFieldUpdateOperationsInput | string
  loan_term_in_months?: Prisma.IntFieldUpdateOperationsInput | number
}

export type pricing_engineUpdateManyMutationInput = {
  minimum_interest_rate?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  program?: Prisma.StringFieldUpdateOperationsInput | string
  loan_term_in_months?: Prisma.IntFieldUpdateOperationsInput | number
}

export type pricing_engineUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  minimum_interest_rate?: Prisma.DecimalFieldUpdateOperationsInput | runtime.Decimal | runtime.DecimalJsLike | number | string
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  program?: Prisma.StringFieldUpdateOperationsInput | string
  loan_term_in_months?: Prisma.IntFieldUpdateOperationsInput | number
}

export type pricing_engineCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  minimum_interest_rate?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  program?: Prisma.SortOrder
  loan_term_in_months?: Prisma.SortOrder
}

export type pricing_engineAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  minimum_interest_rate?: Prisma.SortOrder
  loan_term_in_months?: Prisma.SortOrder
}

export type pricing_engineMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  minimum_interest_rate?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  program?: Prisma.SortOrder
  loan_term_in_months?: Prisma.SortOrder
}

export type pricing_engineMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  minimum_interest_rate?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  program?: Prisma.SortOrder
  loan_term_in_months?: Prisma.SortOrder
}

export type pricing_engineSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  minimum_interest_rate?: Prisma.SortOrder
  loan_term_in_months?: Prisma.SortOrder
}



export type pricing_engineSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  minimum_interest_rate?: boolean
  created_at?: boolean
  updated_at?: boolean
  program?: boolean
  loan_term_in_months?: boolean
}, ExtArgs["result"]["pricing_engine"]>


export type pricing_engineSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  minimum_interest_rate?: boolean
  created_at?: boolean
  updated_at?: boolean
  program?: boolean
  loan_term_in_months?: boolean
}, ExtArgs["result"]["pricing_engine"]>

export type pricing_engineSelectScalar = {
  id?: boolean
  minimum_interest_rate?: boolean
  created_at?: boolean
  updated_at?: boolean
  program?: boolean
  loan_term_in_months?: boolean
}

export type pricing_engineOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "minimum_interest_rate" | "created_at" | "updated_at" | "program" | "loan_term_in_months", ExtArgs["result"]["pricing_engine"]>

export type $pricing_enginePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "pricing_engine"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    minimum_interest_rate: runtime.Decimal
    created_at: Date | null
    updated_at: Date | null
    program: string
    loan_term_in_months: number
  }, ExtArgs["result"]["pricing_engine"]>
  composites: {}
}

export type pricing_engineGetPayload<S extends boolean | null | undefined | pricing_engineDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$pricing_enginePayload, S>

export type pricing_engineCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<pricing_engineFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Pricing_engineCountAggregateInputType | true
  }

export interface pricing_engineDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pricing_engine'], meta: { name: 'pricing_engine' } }
  /**
   * Find zero or one Pricing_engine that matches the filter.
   * @param {pricing_engineFindUniqueArgs} args - Arguments to find a Pricing_engine
   * @example
   * // Get one Pricing_engine
   * const pricing_engine = await prisma.pricing_engine.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends pricing_engineFindUniqueArgs>(args: Prisma.SelectSubset<T, pricing_engineFindUniqueArgs<ExtArgs>>): Prisma.Prisma__pricing_engineClient<runtime.Types.Result.GetResult<Prisma.$pricing_enginePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Pricing_engine that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {pricing_engineFindUniqueOrThrowArgs} args - Arguments to find a Pricing_engine
   * @example
   * // Get one Pricing_engine
   * const pricing_engine = await prisma.pricing_engine.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends pricing_engineFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, pricing_engineFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__pricing_engineClient<runtime.Types.Result.GetResult<Prisma.$pricing_enginePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Pricing_engine that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {pricing_engineFindFirstArgs} args - Arguments to find a Pricing_engine
   * @example
   * // Get one Pricing_engine
   * const pricing_engine = await prisma.pricing_engine.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends pricing_engineFindFirstArgs>(args?: Prisma.SelectSubset<T, pricing_engineFindFirstArgs<ExtArgs>>): Prisma.Prisma__pricing_engineClient<runtime.Types.Result.GetResult<Prisma.$pricing_enginePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Pricing_engine that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {pricing_engineFindFirstOrThrowArgs} args - Arguments to find a Pricing_engine
   * @example
   * // Get one Pricing_engine
   * const pricing_engine = await prisma.pricing_engine.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends pricing_engineFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, pricing_engineFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__pricing_engineClient<runtime.Types.Result.GetResult<Prisma.$pricing_enginePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Pricing_engines that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {pricing_engineFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Pricing_engines
   * const pricing_engines = await prisma.pricing_engine.findMany()
   * 
   * // Get first 10 Pricing_engines
   * const pricing_engines = await prisma.pricing_engine.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const pricing_engineWithIdOnly = await prisma.pricing_engine.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends pricing_engineFindManyArgs>(args?: Prisma.SelectSubset<T, pricing_engineFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$pricing_enginePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Delete a Pricing_engine.
   * @param {pricing_engineDeleteArgs} args - Arguments to delete one Pricing_engine.
   * @example
   * // Delete one Pricing_engine
   * const Pricing_engine = await prisma.pricing_engine.delete({
   *   where: {
   *     // ... filter to delete one Pricing_engine
   *   }
   * })
   * 
   */
  delete<T extends pricing_engineDeleteArgs>(args: Prisma.SelectSubset<T, pricing_engineDeleteArgs<ExtArgs>>): Prisma.Prisma__pricing_engineClient<runtime.Types.Result.GetResult<Prisma.$pricing_enginePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Pricing_engine.
   * @param {pricing_engineUpdateArgs} args - Arguments to update one Pricing_engine.
   * @example
   * // Update one Pricing_engine
   * const pricing_engine = await prisma.pricing_engine.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends pricing_engineUpdateArgs>(args: Prisma.SelectSubset<T, pricing_engineUpdateArgs<ExtArgs>>): Prisma.Prisma__pricing_engineClient<runtime.Types.Result.GetResult<Prisma.$pricing_enginePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Pricing_engines.
   * @param {pricing_engineDeleteManyArgs} args - Arguments to filter Pricing_engines to delete.
   * @example
   * // Delete a few Pricing_engines
   * const { count } = await prisma.pricing_engine.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends pricing_engineDeleteManyArgs>(args?: Prisma.SelectSubset<T, pricing_engineDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Pricing_engines.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {pricing_engineUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Pricing_engines
   * const pricing_engine = await prisma.pricing_engine.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends pricing_engineUpdateManyArgs>(args: Prisma.SelectSubset<T, pricing_engineUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Pricing_engines and returns the data updated in the database.
   * @param {pricing_engineUpdateManyAndReturnArgs} args - Arguments to update many Pricing_engines.
   * @example
   * // Update many Pricing_engines
   * const pricing_engine = await prisma.pricing_engine.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Pricing_engines and only return the `id`
   * const pricing_engineWithIdOnly = await prisma.pricing_engine.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends pricing_engineUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, pricing_engineUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$pricing_enginePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>


  /**
   * Count the number of Pricing_engines.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {pricing_engineCountArgs} args - Arguments to filter Pricing_engines to count.
   * @example
   * // Count the number of Pricing_engines
   * const count = await prisma.pricing_engine.count({
   *   where: {
   *     // ... the filter for the Pricing_engines we want to count
   *   }
   * })
  **/
  count<T extends pricing_engineCountArgs>(
    args?: Prisma.Subset<T, pricing_engineCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Pricing_engineCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Pricing_engine.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Pricing_engineAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Pricing_engineAggregateArgs>(args: Prisma.Subset<T, Pricing_engineAggregateArgs>): Prisma.PrismaPromise<GetPricing_engineAggregateType<T>>

  /**
   * Group by Pricing_engine.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {pricing_engineGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends pricing_engineGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: pricing_engineGroupByArgs['orderBy'] }
      : { orderBy?: pricing_engineGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, pricing_engineGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPricing_engineGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the pricing_engine model
 */
readonly fields: pricing_engineFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for pricing_engine.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__pricing_engineClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the pricing_engine model
 */
export interface pricing_engineFieldRefs {
  readonly id: Prisma.FieldRef<"pricing_engine", 'Int'>
  readonly minimum_interest_rate: Prisma.FieldRef<"pricing_engine", 'Decimal'>
  readonly created_at: Prisma.FieldRef<"pricing_engine", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"pricing_engine", 'DateTime'>
  readonly program: Prisma.FieldRef<"pricing_engine", 'String'>
  readonly loan_term_in_months: Prisma.FieldRef<"pricing_engine", 'Int'>
}
    

// Custom InputTypes
/**
 * pricing_engine findUnique
 */
export type pricing_engineFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the pricing_engine
   */
  select?: Prisma.pricing_engineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the pricing_engine
   */
  omit?: Prisma.pricing_engineOmit<ExtArgs> | null
  /**
   * Filter, which pricing_engine to fetch.
   */
  where: Prisma.pricing_engineWhereUniqueInput
}

/**
 * pricing_engine findUniqueOrThrow
 */
export type pricing_engineFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the pricing_engine
   */
  select?: Prisma.pricing_engineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the pricing_engine
   */
  omit?: Prisma.pricing_engineOmit<ExtArgs> | null
  /**
   * Filter, which pricing_engine to fetch.
   */
  where: Prisma.pricing_engineWhereUniqueInput
}

/**
 * pricing_engine findFirst
 */
export type pricing_engineFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the pricing_engine
   */
  select?: Prisma.pricing_engineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the pricing_engine
   */
  omit?: Prisma.pricing_engineOmit<ExtArgs> | null
  /**
   * Filter, which pricing_engine to fetch.
   */
  where?: Prisma.pricing_engineWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of pricing_engines to fetch.
   */
  orderBy?: Prisma.pricing_engineOrderByWithRelationInput | Prisma.pricing_engineOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for pricing_engines.
   */
  cursor?: Prisma.pricing_engineWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` pricing_engines from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` pricing_engines.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of pricing_engines.
   */
  distinct?: Prisma.Pricing_engineScalarFieldEnum | Prisma.Pricing_engineScalarFieldEnum[]
}

/**
 * pricing_engine findFirstOrThrow
 */
export type pricing_engineFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the pricing_engine
   */
  select?: Prisma.pricing_engineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the pricing_engine
   */
  omit?: Prisma.pricing_engineOmit<ExtArgs> | null
  /**
   * Filter, which pricing_engine to fetch.
   */
  where?: Prisma.pricing_engineWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of pricing_engines to fetch.
   */
  orderBy?: Prisma.pricing_engineOrderByWithRelationInput | Prisma.pricing_engineOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for pricing_engines.
   */
  cursor?: Prisma.pricing_engineWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` pricing_engines from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` pricing_engines.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of pricing_engines.
   */
  distinct?: Prisma.Pricing_engineScalarFieldEnum | Prisma.Pricing_engineScalarFieldEnum[]
}

/**
 * pricing_engine findMany
 */
export type pricing_engineFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the pricing_engine
   */
  select?: Prisma.pricing_engineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the pricing_engine
   */
  omit?: Prisma.pricing_engineOmit<ExtArgs> | null
  /**
   * Filter, which pricing_engines to fetch.
   */
  where?: Prisma.pricing_engineWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of pricing_engines to fetch.
   */
  orderBy?: Prisma.pricing_engineOrderByWithRelationInput | Prisma.pricing_engineOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing pricing_engines.
   */
  cursor?: Prisma.pricing_engineWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` pricing_engines from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` pricing_engines.
   */
  skip?: number
  distinct?: Prisma.Pricing_engineScalarFieldEnum | Prisma.Pricing_engineScalarFieldEnum[]
}

/**
 * pricing_engine update
 */
export type pricing_engineUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the pricing_engine
   */
  select?: Prisma.pricing_engineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the pricing_engine
   */
  omit?: Prisma.pricing_engineOmit<ExtArgs> | null
  /**
   * The data needed to update a pricing_engine.
   */
  data: Prisma.XOR<Prisma.pricing_engineUpdateInput, Prisma.pricing_engineUncheckedUpdateInput>
  /**
   * Choose, which pricing_engine to update.
   */
  where: Prisma.pricing_engineWhereUniqueInput
}

/**
 * pricing_engine updateMany
 */
export type pricing_engineUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update pricing_engines.
   */
  data: Prisma.XOR<Prisma.pricing_engineUpdateManyMutationInput, Prisma.pricing_engineUncheckedUpdateManyInput>
  /**
   * Filter which pricing_engines to update
   */
  where?: Prisma.pricing_engineWhereInput
  /**
   * Limit how many pricing_engines to update.
   */
  limit?: number
}

/**
 * pricing_engine updateManyAndReturn
 */
export type pricing_engineUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the pricing_engine
   */
  select?: Prisma.pricing_engineSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the pricing_engine
   */
  omit?: Prisma.pricing_engineOmit<ExtArgs> | null
  /**
   * The data used to update pricing_engines.
   */
  data: Prisma.XOR<Prisma.pricing_engineUpdateManyMutationInput, Prisma.pricing_engineUncheckedUpdateManyInput>
  /**
   * Filter which pricing_engines to update
   */
  where?: Prisma.pricing_engineWhereInput
  /**
   * Limit how many pricing_engines to update.
   */
  limit?: number
}

/**
 * pricing_engine delete
 */
export type pricing_engineDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the pricing_engine
   */
  select?: Prisma.pricing_engineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the pricing_engine
   */
  omit?: Prisma.pricing_engineOmit<ExtArgs> | null
  /**
   * Filter which pricing_engine to delete.
   */
  where: Prisma.pricing_engineWhereUniqueInput
}

/**
 * pricing_engine deleteMany
 */
export type pricing_engineDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which pricing_engines to delete
   */
  where?: Prisma.pricing_engineWhereInput
  /**
   * Limit how many pricing_engines to delete.
   */
  limit?: number
}

/**
 * pricing_engine without action
 */
export type pricing_engineDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the pricing_engine
   */
  select?: Prisma.pricing_engineSelect<ExtArgs> | null
  /**
   * Omit specific fields from the pricing_engine
   */
  omit?: Prisma.pricing_engineOmit<ExtArgs> | null
}
