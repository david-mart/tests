
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `loan_status` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model loan_status
 * 
 */
export type loan_statusModel = runtime.Types.Result.DefaultSelection<Prisma.$loan_statusPayload>

export type AggregateLoan_status = {
  _count: Loan_statusCountAggregateOutputType | null
  _avg: Loan_statusAvgAggregateOutputType | null
  _sum: Loan_statusSumAggregateOutputType | null
  _min: Loan_statusMinAggregateOutputType | null
  _max: Loan_statusMaxAggregateOutputType | null
}

export type Loan_statusAvgAggregateOutputType = {
  loan_status_number: number | null
}

export type Loan_statusSumAggregateOutputType = {
  loan_status_number: number | null
}

export type Loan_statusMinAggregateOutputType = {
  loan_status_number: number | null
  loan_status_description: string | null
  created_at: Date | null
  updated_at: Date | null
}

export type Loan_statusMaxAggregateOutputType = {
  loan_status_number: number | null
  loan_status_description: string | null
  created_at: Date | null
  updated_at: Date | null
}

export type Loan_statusCountAggregateOutputType = {
  loan_status_number: number
  loan_status_description: number
  created_at: number
  updated_at: number
  _all: number
}


export type Loan_statusAvgAggregateInputType = {
  loan_status_number?: true
}

export type Loan_statusSumAggregateInputType = {
  loan_status_number?: true
}

export type Loan_statusMinAggregateInputType = {
  loan_status_number?: true
  loan_status_description?: true
  created_at?: true
  updated_at?: true
}

export type Loan_statusMaxAggregateInputType = {
  loan_status_number?: true
  loan_status_description?: true
  created_at?: true
  updated_at?: true
}

export type Loan_statusCountAggregateInputType = {
  loan_status_number?: true
  loan_status_description?: true
  created_at?: true
  updated_at?: true
  _all?: true
}

export type Loan_statusAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which loan_status to aggregate.
   */
  where?: Prisma.loan_statusWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of loan_statuses to fetch.
   */
  orderBy?: Prisma.loan_statusOrderByWithRelationInput | Prisma.loan_statusOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.loan_statusWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` loan_statuses from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` loan_statuses.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned loan_statuses
  **/
  _count?: true | Loan_statusCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Loan_statusAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Loan_statusSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Loan_statusMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Loan_statusMaxAggregateInputType
}

export type GetLoan_statusAggregateType<T extends Loan_statusAggregateArgs> = {
      [P in keyof T & keyof AggregateLoan_status]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateLoan_status[P]>
    : Prisma.GetScalarType<T[P], AggregateLoan_status[P]>
}




export type loan_statusGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.loan_statusWhereInput
  orderBy?: Prisma.loan_statusOrderByWithAggregationInput | Prisma.loan_statusOrderByWithAggregationInput[]
  by: Prisma.Loan_statusScalarFieldEnum[] | Prisma.Loan_statusScalarFieldEnum
  having?: Prisma.loan_statusScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Loan_statusCountAggregateInputType | true
  _avg?: Loan_statusAvgAggregateInputType
  _sum?: Loan_statusSumAggregateInputType
  _min?: Loan_statusMinAggregateInputType
  _max?: Loan_statusMaxAggregateInputType
}

export type Loan_statusGroupByOutputType = {
  loan_status_number: number
  loan_status_description: string | null
  created_at: Date
  updated_at: Date | null
  _count: Loan_statusCountAggregateOutputType | null
  _avg: Loan_statusAvgAggregateOutputType | null
  _sum: Loan_statusSumAggregateOutputType | null
  _min: Loan_statusMinAggregateOutputType | null
  _max: Loan_statusMaxAggregateOutputType | null
}

type GetLoan_statusGroupByPayload<T extends loan_statusGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Loan_statusGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Loan_statusGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Loan_statusGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Loan_statusGroupByOutputType[P]>
      }
    >
  >



export type loan_statusWhereInput = {
  AND?: Prisma.loan_statusWhereInput | Prisma.loan_statusWhereInput[]
  OR?: Prisma.loan_statusWhereInput[]
  NOT?: Prisma.loan_statusWhereInput | Prisma.loan_statusWhereInput[]
  loan_status_number?: Prisma.IntFilter<"loan_status"> | number
  loan_status_description?: Prisma.StringNullableFilter<"loan_status"> | string | null
  created_at?: Prisma.DateTimeFilter<"loan_status"> | Date | string
  updated_at?: Prisma.DateTimeNullableFilter<"loan_status"> | Date | string | null
  loan?: Prisma.LoanListRelationFilter
  loan_staging?: Prisma.Loan_stagingListRelationFilter
  loan_trial_balance?: Prisma.Loan_trial_balanceListRelationFilter
  loan_trial_balance_staging?: Prisma.Loan_trial_balance_stagingListRelationFilter
}

export type loan_statusOrderByWithRelationInput = {
  loan_status_number?: Prisma.SortOrder
  loan_status_description?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  loan?: Prisma.loanOrderByRelationAggregateInput
  loan_staging?: Prisma.loan_stagingOrderByRelationAggregateInput
  loan_trial_balance?: Prisma.loan_trial_balanceOrderByRelationAggregateInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingOrderByRelationAggregateInput
}

export type loan_statusWhereUniqueInput = Prisma.AtLeast<{
  loan_status_number?: number
  loan_status_description?: string
  AND?: Prisma.loan_statusWhereInput | Prisma.loan_statusWhereInput[]
  OR?: Prisma.loan_statusWhereInput[]
  NOT?: Prisma.loan_statusWhereInput | Prisma.loan_statusWhereInput[]
  created_at?: Prisma.DateTimeFilter<"loan_status"> | Date | string
  updated_at?: Prisma.DateTimeNullableFilter<"loan_status"> | Date | string | null
  loan?: Prisma.LoanListRelationFilter
  loan_staging?: Prisma.Loan_stagingListRelationFilter
  loan_trial_balance?: Prisma.Loan_trial_balanceListRelationFilter
  loan_trial_balance_staging?: Prisma.Loan_trial_balance_stagingListRelationFilter
}, "loan_status_number" | "loan_status_description">

export type loan_statusOrderByWithAggregationInput = {
  loan_status_number?: Prisma.SortOrder
  loan_status_description?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.loan_statusCountOrderByAggregateInput
  _avg?: Prisma.loan_statusAvgOrderByAggregateInput
  _max?: Prisma.loan_statusMaxOrderByAggregateInput
  _min?: Prisma.loan_statusMinOrderByAggregateInput
  _sum?: Prisma.loan_statusSumOrderByAggregateInput
}

export type loan_statusScalarWhereWithAggregatesInput = {
  AND?: Prisma.loan_statusScalarWhereWithAggregatesInput | Prisma.loan_statusScalarWhereWithAggregatesInput[]
  OR?: Prisma.loan_statusScalarWhereWithAggregatesInput[]
  NOT?: Prisma.loan_statusScalarWhereWithAggregatesInput | Prisma.loan_statusScalarWhereWithAggregatesInput[]
  loan_status_number?: Prisma.IntWithAggregatesFilter<"loan_status"> | number
  loan_status_description?: Prisma.StringNullableWithAggregatesFilter<"loan_status"> | string | null
  created_at?: Prisma.DateTimeWithAggregatesFilter<"loan_status"> | Date | string
  updated_at?: Prisma.DateTimeNullableWithAggregatesFilter<"loan_status"> | Date | string | null
}

export type loan_statusCreateInput = {
  loan_status_number: number
  loan_status_description?: string | null
  created_at?: Date | string
  updated_at?: Date | string | null
  loan?: Prisma.loanCreateNestedManyWithoutLoan_statusInput
  loan_staging?: Prisma.loan_stagingCreateNestedManyWithoutLoan_statusInput
  loan_trial_balance?: Prisma.loan_trial_balanceCreateNestedManyWithoutLoan_statusInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingCreateNestedManyWithoutLoan_statusInput
}

export type loan_statusUncheckedCreateInput = {
  loan_status_number: number
  loan_status_description?: string | null
  created_at?: Date | string
  updated_at?: Date | string | null
  loan?: Prisma.loanUncheckedCreateNestedManyWithoutLoan_statusInput
  loan_staging?: Prisma.loan_stagingUncheckedCreateNestedManyWithoutLoan_statusInput
  loan_trial_balance?: Prisma.loan_trial_balanceUncheckedCreateNestedManyWithoutLoan_statusInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingUncheckedCreateNestedManyWithoutLoan_statusInput
}

export type loan_statusUpdateInput = {
  loan_status_number?: Prisma.IntFieldUpdateOperationsInput | number
  loan_status_description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  loan?: Prisma.loanUpdateManyWithoutLoan_statusNestedInput
  loan_staging?: Prisma.loan_stagingUpdateManyWithoutLoan_statusNestedInput
  loan_trial_balance?: Prisma.loan_trial_balanceUpdateManyWithoutLoan_statusNestedInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingUpdateManyWithoutLoan_statusNestedInput
}

export type loan_statusUncheckedUpdateInput = {
  loan_status_number?: Prisma.IntFieldUpdateOperationsInput | number
  loan_status_description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  loan?: Prisma.loanUncheckedUpdateManyWithoutLoan_statusNestedInput
  loan_staging?: Prisma.loan_stagingUncheckedUpdateManyWithoutLoan_statusNestedInput
  loan_trial_balance?: Prisma.loan_trial_balanceUncheckedUpdateManyWithoutLoan_statusNestedInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingUncheckedUpdateManyWithoutLoan_statusNestedInput
}

export type loan_statusCreateManyInput = {
  loan_status_number: number
  loan_status_description?: string | null
  created_at?: Date | string
  updated_at?: Date | string | null
}

export type loan_statusUpdateManyMutationInput = {
  loan_status_number?: Prisma.IntFieldUpdateOperationsInput | number
  loan_status_description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type loan_statusUncheckedUpdateManyInput = {
  loan_status_number?: Prisma.IntFieldUpdateOperationsInput | number
  loan_status_description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type Loan_statusNullableScalarRelationFilter = {
  is?: Prisma.loan_statusWhereInput | null
  isNot?: Prisma.loan_statusWhereInput | null
}

export type loan_statusCountOrderByAggregateInput = {
  loan_status_number?: Prisma.SortOrder
  loan_status_description?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type loan_statusAvgOrderByAggregateInput = {
  loan_status_number?: Prisma.SortOrder
}

export type loan_statusMaxOrderByAggregateInput = {
  loan_status_number?: Prisma.SortOrder
  loan_status_description?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type loan_statusMinOrderByAggregateInput = {
  loan_status_number?: Prisma.SortOrder
  loan_status_description?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type loan_statusSumOrderByAggregateInput = {
  loan_status_number?: Prisma.SortOrder
}

export type loan_statusCreateNestedOneWithoutLoanInput = {
  create?: Prisma.XOR<Prisma.loan_statusCreateWithoutLoanInput, Prisma.loan_statusUncheckedCreateWithoutLoanInput>
  connectOrCreate?: Prisma.loan_statusCreateOrConnectWithoutLoanInput
  connect?: Prisma.loan_statusWhereUniqueInput
}

export type loan_statusUpdateOneWithoutLoanNestedInput = {
  create?: Prisma.XOR<Prisma.loan_statusCreateWithoutLoanInput, Prisma.loan_statusUncheckedCreateWithoutLoanInput>
  connectOrCreate?: Prisma.loan_statusCreateOrConnectWithoutLoanInput
  upsert?: Prisma.loan_statusUpsertWithoutLoanInput
  disconnect?: Prisma.loan_statusWhereInput | boolean
  delete?: Prisma.loan_statusWhereInput | boolean
  connect?: Prisma.loan_statusWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.loan_statusUpdateToOneWithWhereWithoutLoanInput, Prisma.loan_statusUpdateWithoutLoanInput>, Prisma.loan_statusUncheckedUpdateWithoutLoanInput>
}

export type loan_statusCreateNestedOneWithoutLoan_stagingInput = {
  create?: Prisma.XOR<Prisma.loan_statusCreateWithoutLoan_stagingInput, Prisma.loan_statusUncheckedCreateWithoutLoan_stagingInput>
  connectOrCreate?: Prisma.loan_statusCreateOrConnectWithoutLoan_stagingInput
  connect?: Prisma.loan_statusWhereUniqueInput
}

export type loan_statusUpdateOneWithoutLoan_stagingNestedInput = {
  create?: Prisma.XOR<Prisma.loan_statusCreateWithoutLoan_stagingInput, Prisma.loan_statusUncheckedCreateWithoutLoan_stagingInput>
  connectOrCreate?: Prisma.loan_statusCreateOrConnectWithoutLoan_stagingInput
  upsert?: Prisma.loan_statusUpsertWithoutLoan_stagingInput
  disconnect?: Prisma.loan_statusWhereInput | boolean
  delete?: Prisma.loan_statusWhereInput | boolean
  connect?: Prisma.loan_statusWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.loan_statusUpdateToOneWithWhereWithoutLoan_stagingInput, Prisma.loan_statusUpdateWithoutLoan_stagingInput>, Prisma.loan_statusUncheckedUpdateWithoutLoan_stagingInput>
}

export type loan_statusCreateNestedOneWithoutLoan_trial_balanceInput = {
  create?: Prisma.XOR<Prisma.loan_statusCreateWithoutLoan_trial_balanceInput, Prisma.loan_statusUncheckedCreateWithoutLoan_trial_balanceInput>
  connectOrCreate?: Prisma.loan_statusCreateOrConnectWithoutLoan_trial_balanceInput
  connect?: Prisma.loan_statusWhereUniqueInput
}

export type loan_statusUpdateOneWithoutLoan_trial_balanceNestedInput = {
  create?: Prisma.XOR<Prisma.loan_statusCreateWithoutLoan_trial_balanceInput, Prisma.loan_statusUncheckedCreateWithoutLoan_trial_balanceInput>
  connectOrCreate?: Prisma.loan_statusCreateOrConnectWithoutLoan_trial_balanceInput
  upsert?: Prisma.loan_statusUpsertWithoutLoan_trial_balanceInput
  disconnect?: Prisma.loan_statusWhereInput | boolean
  delete?: Prisma.loan_statusWhereInput | boolean
  connect?: Prisma.loan_statusWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.loan_statusUpdateToOneWithWhereWithoutLoan_trial_balanceInput, Prisma.loan_statusUpdateWithoutLoan_trial_balanceInput>, Prisma.loan_statusUncheckedUpdateWithoutLoan_trial_balanceInput>
}

export type loan_statusCreateNestedOneWithoutLoan_trial_balance_stagingInput = {
  create?: Prisma.XOR<Prisma.loan_statusCreateWithoutLoan_trial_balance_stagingInput, Prisma.loan_statusUncheckedCreateWithoutLoan_trial_balance_stagingInput>
  connectOrCreate?: Prisma.loan_statusCreateOrConnectWithoutLoan_trial_balance_stagingInput
  connect?: Prisma.loan_statusWhereUniqueInput
}

export type loan_statusUpdateOneWithoutLoan_trial_balance_stagingNestedInput = {
  create?: Prisma.XOR<Prisma.loan_statusCreateWithoutLoan_trial_balance_stagingInput, Prisma.loan_statusUncheckedCreateWithoutLoan_trial_balance_stagingInput>
  connectOrCreate?: Prisma.loan_statusCreateOrConnectWithoutLoan_trial_balance_stagingInput
  upsert?: Prisma.loan_statusUpsertWithoutLoan_trial_balance_stagingInput
  disconnect?: Prisma.loan_statusWhereInput | boolean
  delete?: Prisma.loan_statusWhereInput | boolean
  connect?: Prisma.loan_statusWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.loan_statusUpdateToOneWithWhereWithoutLoan_trial_balance_stagingInput, Prisma.loan_statusUpdateWithoutLoan_trial_balance_stagingInput>, Prisma.loan_statusUncheckedUpdateWithoutLoan_trial_balance_stagingInput>
}

export type loan_statusCreateWithoutLoanInput = {
  loan_status_number: number
  loan_status_description?: string | null
  created_at?: Date | string
  updated_at?: Date | string | null
  loan_staging?: Prisma.loan_stagingCreateNestedManyWithoutLoan_statusInput
  loan_trial_balance?: Prisma.loan_trial_balanceCreateNestedManyWithoutLoan_statusInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingCreateNestedManyWithoutLoan_statusInput
}

export type loan_statusUncheckedCreateWithoutLoanInput = {
  loan_status_number: number
  loan_status_description?: string | null
  created_at?: Date | string
  updated_at?: Date | string | null
  loan_staging?: Prisma.loan_stagingUncheckedCreateNestedManyWithoutLoan_statusInput
  loan_trial_balance?: Prisma.loan_trial_balanceUncheckedCreateNestedManyWithoutLoan_statusInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingUncheckedCreateNestedManyWithoutLoan_statusInput
}

export type loan_statusCreateOrConnectWithoutLoanInput = {
  where: Prisma.loan_statusWhereUniqueInput
  create: Prisma.XOR<Prisma.loan_statusCreateWithoutLoanInput, Prisma.loan_statusUncheckedCreateWithoutLoanInput>
}

export type loan_statusUpsertWithoutLoanInput = {
  update: Prisma.XOR<Prisma.loan_statusUpdateWithoutLoanInput, Prisma.loan_statusUncheckedUpdateWithoutLoanInput>
  create: Prisma.XOR<Prisma.loan_statusCreateWithoutLoanInput, Prisma.loan_statusUncheckedCreateWithoutLoanInput>
  where?: Prisma.loan_statusWhereInput
}

export type loan_statusUpdateToOneWithWhereWithoutLoanInput = {
  where?: Prisma.loan_statusWhereInput
  data: Prisma.XOR<Prisma.loan_statusUpdateWithoutLoanInput, Prisma.loan_statusUncheckedUpdateWithoutLoanInput>
}

export type loan_statusUpdateWithoutLoanInput = {
  loan_status_number?: Prisma.IntFieldUpdateOperationsInput | number
  loan_status_description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  loan_staging?: Prisma.loan_stagingUpdateManyWithoutLoan_statusNestedInput
  loan_trial_balance?: Prisma.loan_trial_balanceUpdateManyWithoutLoan_statusNestedInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingUpdateManyWithoutLoan_statusNestedInput
}

export type loan_statusUncheckedUpdateWithoutLoanInput = {
  loan_status_number?: Prisma.IntFieldUpdateOperationsInput | number
  loan_status_description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  loan_staging?: Prisma.loan_stagingUncheckedUpdateManyWithoutLoan_statusNestedInput
  loan_trial_balance?: Prisma.loan_trial_balanceUncheckedUpdateManyWithoutLoan_statusNestedInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingUncheckedUpdateManyWithoutLoan_statusNestedInput
}

export type loan_statusCreateWithoutLoan_stagingInput = {
  loan_status_number: number
  loan_status_description?: string | null
  created_at?: Date | string
  updated_at?: Date | string | null
  loan?: Prisma.loanCreateNestedManyWithoutLoan_statusInput
  loan_trial_balance?: Prisma.loan_trial_balanceCreateNestedManyWithoutLoan_statusInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingCreateNestedManyWithoutLoan_statusInput
}

export type loan_statusUncheckedCreateWithoutLoan_stagingInput = {
  loan_status_number: number
  loan_status_description?: string | null
  created_at?: Date | string
  updated_at?: Date | string | null
  loan?: Prisma.loanUncheckedCreateNestedManyWithoutLoan_statusInput
  loan_trial_balance?: Prisma.loan_trial_balanceUncheckedCreateNestedManyWithoutLoan_statusInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingUncheckedCreateNestedManyWithoutLoan_statusInput
}

export type loan_statusCreateOrConnectWithoutLoan_stagingInput = {
  where: Prisma.loan_statusWhereUniqueInput
  create: Prisma.XOR<Prisma.loan_statusCreateWithoutLoan_stagingInput, Prisma.loan_statusUncheckedCreateWithoutLoan_stagingInput>
}

export type loan_statusUpsertWithoutLoan_stagingInput = {
  update: Prisma.XOR<Prisma.loan_statusUpdateWithoutLoan_stagingInput, Prisma.loan_statusUncheckedUpdateWithoutLoan_stagingInput>
  create: Prisma.XOR<Prisma.loan_statusCreateWithoutLoan_stagingInput, Prisma.loan_statusUncheckedCreateWithoutLoan_stagingInput>
  where?: Prisma.loan_statusWhereInput
}

export type loan_statusUpdateToOneWithWhereWithoutLoan_stagingInput = {
  where?: Prisma.loan_statusWhereInput
  data: Prisma.XOR<Prisma.loan_statusUpdateWithoutLoan_stagingInput, Prisma.loan_statusUncheckedUpdateWithoutLoan_stagingInput>
}

export type loan_statusUpdateWithoutLoan_stagingInput = {
  loan_status_number?: Prisma.IntFieldUpdateOperationsInput | number
  loan_status_description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  loan?: Prisma.loanUpdateManyWithoutLoan_statusNestedInput
  loan_trial_balance?: Prisma.loan_trial_balanceUpdateManyWithoutLoan_statusNestedInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingUpdateManyWithoutLoan_statusNestedInput
}

export type loan_statusUncheckedUpdateWithoutLoan_stagingInput = {
  loan_status_number?: Prisma.IntFieldUpdateOperationsInput | number
  loan_status_description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  loan?: Prisma.loanUncheckedUpdateManyWithoutLoan_statusNestedInput
  loan_trial_balance?: Prisma.loan_trial_balanceUncheckedUpdateManyWithoutLoan_statusNestedInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingUncheckedUpdateManyWithoutLoan_statusNestedInput
}

export type loan_statusCreateWithoutLoan_trial_balanceInput = {
  loan_status_number: number
  loan_status_description?: string | null
  created_at?: Date | string
  updated_at?: Date | string | null
  loan?: Prisma.loanCreateNestedManyWithoutLoan_statusInput
  loan_staging?: Prisma.loan_stagingCreateNestedManyWithoutLoan_statusInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingCreateNestedManyWithoutLoan_statusInput
}

export type loan_statusUncheckedCreateWithoutLoan_trial_balanceInput = {
  loan_status_number: number
  loan_status_description?: string | null
  created_at?: Date | string
  updated_at?: Date | string | null
  loan?: Prisma.loanUncheckedCreateNestedManyWithoutLoan_statusInput
  loan_staging?: Prisma.loan_stagingUncheckedCreateNestedManyWithoutLoan_statusInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingUncheckedCreateNestedManyWithoutLoan_statusInput
}

export type loan_statusCreateOrConnectWithoutLoan_trial_balanceInput = {
  where: Prisma.loan_statusWhereUniqueInput
  create: Prisma.XOR<Prisma.loan_statusCreateWithoutLoan_trial_balanceInput, Prisma.loan_statusUncheckedCreateWithoutLoan_trial_balanceInput>
}

export type loan_statusUpsertWithoutLoan_trial_balanceInput = {
  update: Prisma.XOR<Prisma.loan_statusUpdateWithoutLoan_trial_balanceInput, Prisma.loan_statusUncheckedUpdateWithoutLoan_trial_balanceInput>
  create: Prisma.XOR<Prisma.loan_statusCreateWithoutLoan_trial_balanceInput, Prisma.loan_statusUncheckedCreateWithoutLoan_trial_balanceInput>
  where?: Prisma.loan_statusWhereInput
}

export type loan_statusUpdateToOneWithWhereWithoutLoan_trial_balanceInput = {
  where?: Prisma.loan_statusWhereInput
  data: Prisma.XOR<Prisma.loan_statusUpdateWithoutLoan_trial_balanceInput, Prisma.loan_statusUncheckedUpdateWithoutLoan_trial_balanceInput>
}

export type loan_statusUpdateWithoutLoan_trial_balanceInput = {
  loan_status_number?: Prisma.IntFieldUpdateOperationsInput | number
  loan_status_description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  loan?: Prisma.loanUpdateManyWithoutLoan_statusNestedInput
  loan_staging?: Prisma.loan_stagingUpdateManyWithoutLoan_statusNestedInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingUpdateManyWithoutLoan_statusNestedInput
}

export type loan_statusUncheckedUpdateWithoutLoan_trial_balanceInput = {
  loan_status_number?: Prisma.IntFieldUpdateOperationsInput | number
  loan_status_description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  loan?: Prisma.loanUncheckedUpdateManyWithoutLoan_statusNestedInput
  loan_staging?: Prisma.loan_stagingUncheckedUpdateManyWithoutLoan_statusNestedInput
  loan_trial_balance_staging?: Prisma.loan_trial_balance_stagingUncheckedUpdateManyWithoutLoan_statusNestedInput
}

export type loan_statusCreateWithoutLoan_trial_balance_stagingInput = {
  loan_status_number: number
  loan_status_description?: string | null
  created_at?: Date | string
  updated_at?: Date | string | null
  loan?: Prisma.loanCreateNestedManyWithoutLoan_statusInput
  loan_staging?: Prisma.loan_stagingCreateNestedManyWithoutLoan_statusInput
  loan_trial_balance?: Prisma.loan_trial_balanceCreateNestedManyWithoutLoan_statusInput
}

export type loan_statusUncheckedCreateWithoutLoan_trial_balance_stagingInput = {
  loan_status_number: number
  loan_status_description?: string | null
  created_at?: Date | string
  updated_at?: Date | string | null
  loan?: Prisma.loanUncheckedCreateNestedManyWithoutLoan_statusInput
  loan_staging?: Prisma.loan_stagingUncheckedCreateNestedManyWithoutLoan_statusInput
  loan_trial_balance?: Prisma.loan_trial_balanceUncheckedCreateNestedManyWithoutLoan_statusInput
}

export type loan_statusCreateOrConnectWithoutLoan_trial_balance_stagingInput = {
  where: Prisma.loan_statusWhereUniqueInput
  create: Prisma.XOR<Prisma.loan_statusCreateWithoutLoan_trial_balance_stagingInput, Prisma.loan_statusUncheckedCreateWithoutLoan_trial_balance_stagingInput>
}

export type loan_statusUpsertWithoutLoan_trial_balance_stagingInput = {
  update: Prisma.XOR<Prisma.loan_statusUpdateWithoutLoan_trial_balance_stagingInput, Prisma.loan_statusUncheckedUpdateWithoutLoan_trial_balance_stagingInput>
  create: Prisma.XOR<Prisma.loan_statusCreateWithoutLoan_trial_balance_stagingInput, Prisma.loan_statusUncheckedCreateWithoutLoan_trial_balance_stagingInput>
  where?: Prisma.loan_statusWhereInput
}

export type loan_statusUpdateToOneWithWhereWithoutLoan_trial_balance_stagingInput = {
  where?: Prisma.loan_statusWhereInput
  data: Prisma.XOR<Prisma.loan_statusUpdateWithoutLoan_trial_balance_stagingInput, Prisma.loan_statusUncheckedUpdateWithoutLoan_trial_balance_stagingInput>
}

export type loan_statusUpdateWithoutLoan_trial_balance_stagingInput = {
  loan_status_number?: Prisma.IntFieldUpdateOperationsInput | number
  loan_status_description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  loan?: Prisma.loanUpdateManyWithoutLoan_statusNestedInput
  loan_staging?: Prisma.loan_stagingUpdateManyWithoutLoan_statusNestedInput
  loan_trial_balance?: Prisma.loan_trial_balanceUpdateManyWithoutLoan_statusNestedInput
}

export type loan_statusUncheckedUpdateWithoutLoan_trial_balance_stagingInput = {
  loan_status_number?: Prisma.IntFieldUpdateOperationsInput | number
  loan_status_description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  loan?: Prisma.loanUncheckedUpdateManyWithoutLoan_statusNestedInput
  loan_staging?: Prisma.loan_stagingUncheckedUpdateManyWithoutLoan_statusNestedInput
  loan_trial_balance?: Prisma.loan_trial_balanceUncheckedUpdateManyWithoutLoan_statusNestedInput
}


/**
 * Count Type Loan_statusCountOutputType
 */

export type Loan_statusCountOutputType = {
  loan: number
  loan_staging: number
  loan_trial_balance: number
  loan_trial_balance_staging: number
}

export type Loan_statusCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  loan?: boolean | Loan_statusCountOutputTypeCountLoanArgs
  loan_staging?: boolean | Loan_statusCountOutputTypeCountLoan_stagingArgs
  loan_trial_balance?: boolean | Loan_statusCountOutputTypeCountLoan_trial_balanceArgs
  loan_trial_balance_staging?: boolean | Loan_statusCountOutputTypeCountLoan_trial_balance_stagingArgs
}

/**
 * Loan_statusCountOutputType without action
 */
export type Loan_statusCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Loan_statusCountOutputType
   */
  select?: Prisma.Loan_statusCountOutputTypeSelect<ExtArgs> | null
}

/**
 * Loan_statusCountOutputType without action
 */
export type Loan_statusCountOutputTypeCountLoanArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.loanWhereInput
}

/**
 * Loan_statusCountOutputType without action
 */
export type Loan_statusCountOutputTypeCountLoan_stagingArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.loan_stagingWhereInput
}

/**
 * Loan_statusCountOutputType without action
 */
export type Loan_statusCountOutputTypeCountLoan_trial_balanceArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.loan_trial_balanceWhereInput
}

/**
 * Loan_statusCountOutputType without action
 */
export type Loan_statusCountOutputTypeCountLoan_trial_balance_stagingArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.loan_trial_balance_stagingWhereInput
}


export type loan_statusSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  loan_status_number?: boolean
  loan_status_description?: boolean
  created_at?: boolean
  updated_at?: boolean
  loan?: boolean | Prisma.loan_status$loanArgs<ExtArgs>
  loan_staging?: boolean | Prisma.loan_status$loan_stagingArgs<ExtArgs>
  loan_trial_balance?: boolean | Prisma.loan_status$loan_trial_balanceArgs<ExtArgs>
  loan_trial_balance_staging?: boolean | Prisma.loan_status$loan_trial_balance_stagingArgs<ExtArgs>
  _count?: boolean | Prisma.Loan_statusCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["loan_status"]>

export type loan_statusSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  loan_status_number?: boolean
  loan_status_description?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["loan_status"]>

export type loan_statusSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  loan_status_number?: boolean
  loan_status_description?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["loan_status"]>

export type loan_statusSelectScalar = {
  loan_status_number?: boolean
  loan_status_description?: boolean
  created_at?: boolean
  updated_at?: boolean
}

export type loan_statusOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"loan_status_number" | "loan_status_description" | "created_at" | "updated_at", ExtArgs["result"]["loan_status"]>
export type loan_statusInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  loan?: boolean | Prisma.loan_status$loanArgs<ExtArgs>
  loan_staging?: boolean | Prisma.loan_status$loan_stagingArgs<ExtArgs>
  loan_trial_balance?: boolean | Prisma.loan_status$loan_trial_balanceArgs<ExtArgs>
  loan_trial_balance_staging?: boolean | Prisma.loan_status$loan_trial_balance_stagingArgs<ExtArgs>
  _count?: boolean | Prisma.Loan_statusCountOutputTypeDefaultArgs<ExtArgs>
}
export type loan_statusIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type loan_statusIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $loan_statusPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "loan_status"
  objects: {
    loan: Prisma.$loanPayload<ExtArgs>[]
    loan_staging: Prisma.$loan_stagingPayload<ExtArgs>[]
    loan_trial_balance: Prisma.$loan_trial_balancePayload<ExtArgs>[]
    loan_trial_balance_staging: Prisma.$loan_trial_balance_stagingPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    loan_status_number: number
    loan_status_description: string | null
    created_at: Date
    updated_at: Date | null
  }, ExtArgs["result"]["loan_status"]>
  composites: {}
}

export type loan_statusGetPayload<S extends boolean | null | undefined | loan_statusDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$loan_statusPayload, S>

export type loan_statusCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<loan_statusFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Loan_statusCountAggregateInputType | true
  }

export interface loan_statusDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['loan_status'], meta: { name: 'loan_status' } }
  /**
   * Find zero or one Loan_status that matches the filter.
   * @param {loan_statusFindUniqueArgs} args - Arguments to find a Loan_status
   * @example
   * // Get one Loan_status
   * const loan_status = await prisma.loan_status.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends loan_statusFindUniqueArgs>(args: Prisma.SelectSubset<T, loan_statusFindUniqueArgs<ExtArgs>>): Prisma.Prisma__loan_statusClient<runtime.Types.Result.GetResult<Prisma.$loan_statusPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Loan_status that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {loan_statusFindUniqueOrThrowArgs} args - Arguments to find a Loan_status
   * @example
   * // Get one Loan_status
   * const loan_status = await prisma.loan_status.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends loan_statusFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, loan_statusFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__loan_statusClient<runtime.Types.Result.GetResult<Prisma.$loan_statusPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Loan_status that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {loan_statusFindFirstArgs} args - Arguments to find a Loan_status
   * @example
   * // Get one Loan_status
   * const loan_status = await prisma.loan_status.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends loan_statusFindFirstArgs>(args?: Prisma.SelectSubset<T, loan_statusFindFirstArgs<ExtArgs>>): Prisma.Prisma__loan_statusClient<runtime.Types.Result.GetResult<Prisma.$loan_statusPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Loan_status that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {loan_statusFindFirstOrThrowArgs} args - Arguments to find a Loan_status
   * @example
   * // Get one Loan_status
   * const loan_status = await prisma.loan_status.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends loan_statusFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, loan_statusFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__loan_statusClient<runtime.Types.Result.GetResult<Prisma.$loan_statusPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Loan_statuses that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {loan_statusFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Loan_statuses
   * const loan_statuses = await prisma.loan_status.findMany()
   * 
   * // Get first 10 Loan_statuses
   * const loan_statuses = await prisma.loan_status.findMany({ take: 10 })
   * 
   * // Only select the `loan_status_number`
   * const loan_statusWithLoan_status_numberOnly = await prisma.loan_status.findMany({ select: { loan_status_number: true } })
   * 
   */
  findMany<T extends loan_statusFindManyArgs>(args?: Prisma.SelectSubset<T, loan_statusFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$loan_statusPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Loan_status.
   * @param {loan_statusCreateArgs} args - Arguments to create a Loan_status.
   * @example
   * // Create one Loan_status
   * const Loan_status = await prisma.loan_status.create({
   *   data: {
   *     // ... data to create a Loan_status
   *   }
   * })
   * 
   */
  create<T extends loan_statusCreateArgs>(args: Prisma.SelectSubset<T, loan_statusCreateArgs<ExtArgs>>): Prisma.Prisma__loan_statusClient<runtime.Types.Result.GetResult<Prisma.$loan_statusPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Loan_statuses.
   * @param {loan_statusCreateManyArgs} args - Arguments to create many Loan_statuses.
   * @example
   * // Create many Loan_statuses
   * const loan_status = await prisma.loan_status.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends loan_statusCreateManyArgs>(args?: Prisma.SelectSubset<T, loan_statusCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Loan_statuses and returns the data saved in the database.
   * @param {loan_statusCreateManyAndReturnArgs} args - Arguments to create many Loan_statuses.
   * @example
   * // Create many Loan_statuses
   * const loan_status = await prisma.loan_status.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Loan_statuses and only return the `loan_status_number`
   * const loan_statusWithLoan_status_numberOnly = await prisma.loan_status.createManyAndReturn({
   *   select: { loan_status_number: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends loan_statusCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, loan_statusCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$loan_statusPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Loan_status.
   * @param {loan_statusDeleteArgs} args - Arguments to delete one Loan_status.
   * @example
   * // Delete one Loan_status
   * const Loan_status = await prisma.loan_status.delete({
   *   where: {
   *     // ... filter to delete one Loan_status
   *   }
   * })
   * 
   */
  delete<T extends loan_statusDeleteArgs>(args: Prisma.SelectSubset<T, loan_statusDeleteArgs<ExtArgs>>): Prisma.Prisma__loan_statusClient<runtime.Types.Result.GetResult<Prisma.$loan_statusPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Loan_status.
   * @param {loan_statusUpdateArgs} args - Arguments to update one Loan_status.
   * @example
   * // Update one Loan_status
   * const loan_status = await prisma.loan_status.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends loan_statusUpdateArgs>(args: Prisma.SelectSubset<T, loan_statusUpdateArgs<ExtArgs>>): Prisma.Prisma__loan_statusClient<runtime.Types.Result.GetResult<Prisma.$loan_statusPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Loan_statuses.
   * @param {loan_statusDeleteManyArgs} args - Arguments to filter Loan_statuses to delete.
   * @example
   * // Delete a few Loan_statuses
   * const { count } = await prisma.loan_status.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends loan_statusDeleteManyArgs>(args?: Prisma.SelectSubset<T, loan_statusDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Loan_statuses.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {loan_statusUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Loan_statuses
   * const loan_status = await prisma.loan_status.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends loan_statusUpdateManyArgs>(args: Prisma.SelectSubset<T, loan_statusUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Loan_statuses and returns the data updated in the database.
   * @param {loan_statusUpdateManyAndReturnArgs} args - Arguments to update many Loan_statuses.
   * @example
   * // Update many Loan_statuses
   * const loan_status = await prisma.loan_status.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Loan_statuses and only return the `loan_status_number`
   * const loan_statusWithLoan_status_numberOnly = await prisma.loan_status.updateManyAndReturn({
   *   select: { loan_status_number: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends loan_statusUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, loan_statusUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$loan_statusPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Loan_status.
   * @param {loan_statusUpsertArgs} args - Arguments to update or create a Loan_status.
   * @example
   * // Update or create a Loan_status
   * const loan_status = await prisma.loan_status.upsert({
   *   create: {
   *     // ... data to create a Loan_status
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Loan_status we want to update
   *   }
   * })
   */
  upsert<T extends loan_statusUpsertArgs>(args: Prisma.SelectSubset<T, loan_statusUpsertArgs<ExtArgs>>): Prisma.Prisma__loan_statusClient<runtime.Types.Result.GetResult<Prisma.$loan_statusPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Loan_statuses.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {loan_statusCountArgs} args - Arguments to filter Loan_statuses to count.
   * @example
   * // Count the number of Loan_statuses
   * const count = await prisma.loan_status.count({
   *   where: {
   *     // ... the filter for the Loan_statuses we want to count
   *   }
   * })
  **/
  count<T extends loan_statusCountArgs>(
    args?: Prisma.Subset<T, loan_statusCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Loan_statusCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Loan_status.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Loan_statusAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Loan_statusAggregateArgs>(args: Prisma.Subset<T, Loan_statusAggregateArgs>): Prisma.PrismaPromise<GetLoan_statusAggregateType<T>>

  /**
   * Group by Loan_status.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {loan_statusGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends loan_statusGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: loan_statusGroupByArgs['orderBy'] }
      : { orderBy?: loan_statusGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, loan_statusGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLoan_statusGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the loan_status model
 */
readonly fields: loan_statusFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for loan_status.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__loan_statusClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  loan<T extends Prisma.loan_status$loanArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.loan_status$loanArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$loanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  loan_staging<T extends Prisma.loan_status$loan_stagingArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.loan_status$loan_stagingArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$loan_stagingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  loan_trial_balance<T extends Prisma.loan_status$loan_trial_balanceArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.loan_status$loan_trial_balanceArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$loan_trial_balancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  loan_trial_balance_staging<T extends Prisma.loan_status$loan_trial_balance_stagingArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.loan_status$loan_trial_balance_stagingArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$loan_trial_balance_stagingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the loan_status model
 */
export interface loan_statusFieldRefs {
  readonly loan_status_number: Prisma.FieldRef<"loan_status", 'Int'>
  readonly loan_status_description: Prisma.FieldRef<"loan_status", 'String'>
  readonly created_at: Prisma.FieldRef<"loan_status", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"loan_status", 'DateTime'>
}
    

// Custom InputTypes
/**
 * loan_status findUnique
 */
export type loan_statusFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the loan_status
   */
  select?: Prisma.loan_statusSelect<ExtArgs> | null
  /**
   * Omit specific fields from the loan_status
   */
  omit?: Prisma.loan_statusOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.loan_statusInclude<ExtArgs> | null
  /**
   * Filter, which loan_status to fetch.
   */
  where: Prisma.loan_statusWhereUniqueInput
}

/**
 * loan_status findUniqueOrThrow
 */
export type loan_statusFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the loan_status
   */
  select?: Prisma.loan_statusSelect<ExtArgs> | null
  /**
   * Omit specific fields from the loan_status
   */
  omit?: Prisma.loan_statusOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.loan_statusInclude<ExtArgs> | null
  /**
   * Filter, which loan_status to fetch.
   */
  where: Prisma.loan_statusWhereUniqueInput
}

/**
 * loan_status findFirst
 */
export type loan_statusFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the loan_status
   */
  select?: Prisma.loan_statusSelect<ExtArgs> | null
  /**
   * Omit specific fields from the loan_status
   */
  omit?: Prisma.loan_statusOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.loan_statusInclude<ExtArgs> | null
  /**
   * Filter, which loan_status to fetch.
   */
  where?: Prisma.loan_statusWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of loan_statuses to fetch.
   */
  orderBy?: Prisma.loan_statusOrderByWithRelationInput | Prisma.loan_statusOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for loan_statuses.
   */
  cursor?: Prisma.loan_statusWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` loan_statuses from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` loan_statuses.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of loan_statuses.
   */
  distinct?: Prisma.Loan_statusScalarFieldEnum | Prisma.Loan_statusScalarFieldEnum[]
}

/**
 * loan_status findFirstOrThrow
 */
export type loan_statusFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the loan_status
   */
  select?: Prisma.loan_statusSelect<ExtArgs> | null
  /**
   * Omit specific fields from the loan_status
   */
  omit?: Prisma.loan_statusOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.loan_statusInclude<ExtArgs> | null
  /**
   * Filter, which loan_status to fetch.
   */
  where?: Prisma.loan_statusWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of loan_statuses to fetch.
   */
  orderBy?: Prisma.loan_statusOrderByWithRelationInput | Prisma.loan_statusOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for loan_statuses.
   */
  cursor?: Prisma.loan_statusWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` loan_statuses from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` loan_statuses.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of loan_statuses.
   */
  distinct?: Prisma.Loan_statusScalarFieldEnum | Prisma.Loan_statusScalarFieldEnum[]
}

/**
 * loan_status findMany
 */
export type loan_statusFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the loan_status
   */
  select?: Prisma.loan_statusSelect<ExtArgs> | null
  /**
   * Omit specific fields from the loan_status
   */
  omit?: Prisma.loan_statusOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.loan_statusInclude<ExtArgs> | null
  /**
   * Filter, which loan_statuses to fetch.
   */
  where?: Prisma.loan_statusWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of loan_statuses to fetch.
   */
  orderBy?: Prisma.loan_statusOrderByWithRelationInput | Prisma.loan_statusOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing loan_statuses.
   */
  cursor?: Prisma.loan_statusWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` loan_statuses from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` loan_statuses.
   */
  skip?: number
  distinct?: Prisma.Loan_statusScalarFieldEnum | Prisma.Loan_statusScalarFieldEnum[]
}

/**
 * loan_status create
 */
export type loan_statusCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the loan_status
   */
  select?: Prisma.loan_statusSelect<ExtArgs> | null
  /**
   * Omit specific fields from the loan_status
   */
  omit?: Prisma.loan_statusOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.loan_statusInclude<ExtArgs> | null
  /**
   * The data needed to create a loan_status.
   */
  data: Prisma.XOR<Prisma.loan_statusCreateInput, Prisma.loan_statusUncheckedCreateInput>
}

/**
 * loan_status createMany
 */
export type loan_statusCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many loan_statuses.
   */
  data: Prisma.loan_statusCreateManyInput | Prisma.loan_statusCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * loan_status createManyAndReturn
 */
export type loan_statusCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the loan_status
   */
  select?: Prisma.loan_statusSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the loan_status
   */
  omit?: Prisma.loan_statusOmit<ExtArgs> | null
  /**
   * The data used to create many loan_statuses.
   */
  data: Prisma.loan_statusCreateManyInput | Prisma.loan_statusCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * loan_status update
 */
export type loan_statusUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the loan_status
   */
  select?: Prisma.loan_statusSelect<ExtArgs> | null
  /**
   * Omit specific fields from the loan_status
   */
  omit?: Prisma.loan_statusOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.loan_statusInclude<ExtArgs> | null
  /**
   * The data needed to update a loan_status.
   */
  data: Prisma.XOR<Prisma.loan_statusUpdateInput, Prisma.loan_statusUncheckedUpdateInput>
  /**
   * Choose, which loan_status to update.
   */
  where: Prisma.loan_statusWhereUniqueInput
}

/**
 * loan_status updateMany
 */
export type loan_statusUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update loan_statuses.
   */
  data: Prisma.XOR<Prisma.loan_statusUpdateManyMutationInput, Prisma.loan_statusUncheckedUpdateManyInput>
  /**
   * Filter which loan_statuses to update
   */
  where?: Prisma.loan_statusWhereInput
  /**
   * Limit how many loan_statuses to update.
   */
  limit?: number
}

/**
 * loan_status updateManyAndReturn
 */
export type loan_statusUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the loan_status
   */
  select?: Prisma.loan_statusSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the loan_status
   */
  omit?: Prisma.loan_statusOmit<ExtArgs> | null
  /**
   * The data used to update loan_statuses.
   */
  data: Prisma.XOR<Prisma.loan_statusUpdateManyMutationInput, Prisma.loan_statusUncheckedUpdateManyInput>
  /**
   * Filter which loan_statuses to update
   */
  where?: Prisma.loan_statusWhereInput
  /**
   * Limit how many loan_statuses to update.
   */
  limit?: number
}

/**
 * loan_status upsert
 */
export type loan_statusUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the loan_status
   */
  select?: Prisma.loan_statusSelect<ExtArgs> | null
  /**
   * Omit specific fields from the loan_status
   */
  omit?: Prisma.loan_statusOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.loan_statusInclude<ExtArgs> | null
  /**
   * The filter to search for the loan_status to update in case it exists.
   */
  where: Prisma.loan_statusWhereUniqueInput
  /**
   * In case the loan_status found by the `where` argument doesn't exist, create a new loan_status with this data.
   */
  create: Prisma.XOR<Prisma.loan_statusCreateInput, Prisma.loan_statusUncheckedCreateInput>
  /**
   * In case the loan_status was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.loan_statusUpdateInput, Prisma.loan_statusUncheckedUpdateInput>
}

/**
 * loan_status delete
 */
export type loan_statusDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the loan_status
   */
  select?: Prisma.loan_statusSelect<ExtArgs> | null
  /**
   * Omit specific fields from the loan_status
   */
  omit?: Prisma.loan_statusOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.loan_statusInclude<ExtArgs> | null
  /**
   * Filter which loan_status to delete.
   */
  where: Prisma.loan_statusWhereUniqueInput
}

/**
 * loan_status deleteMany
 */
export type loan_statusDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which loan_statuses to delete
   */
  where?: Prisma.loan_statusWhereInput
  /**
   * Limit how many loan_statuses to delete.
   */
  limit?: number
}

/**
 * loan_status.loan
 */
export type loan_status$loanArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the loan
   */
  select?: Prisma.loanSelect<ExtArgs> | null
  /**
   * Omit specific fields from the loan
   */
  omit?: Prisma.loanOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.loanInclude<ExtArgs> | null
  where?: Prisma.loanWhereInput
  orderBy?: Prisma.loanOrderByWithRelationInput | Prisma.loanOrderByWithRelationInput[]
  cursor?: Prisma.loanWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.LoanScalarFieldEnum | Prisma.LoanScalarFieldEnum[]
}

/**
 * loan_status.loan_staging
 */
export type loan_status$loan_stagingArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the loan_staging
   */
  select?: Prisma.loan_stagingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the loan_staging
   */
  omit?: Prisma.loan_stagingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.loan_stagingInclude<ExtArgs> | null
  where?: Prisma.loan_stagingWhereInput
  orderBy?: Prisma.loan_stagingOrderByWithRelationInput | Prisma.loan_stagingOrderByWithRelationInput[]
  cursor?: Prisma.loan_stagingWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Loan_stagingScalarFieldEnum | Prisma.Loan_stagingScalarFieldEnum[]
}

/**
 * loan_status.loan_trial_balance
 */
export type loan_status$loan_trial_balanceArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the loan_trial_balance
   */
  select?: Prisma.loan_trial_balanceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the loan_trial_balance
   */
  omit?: Prisma.loan_trial_balanceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.loan_trial_balanceInclude<ExtArgs> | null
  where?: Prisma.loan_trial_balanceWhereInput
  orderBy?: Prisma.loan_trial_balanceOrderByWithRelationInput | Prisma.loan_trial_balanceOrderByWithRelationInput[]
  cursor?: Prisma.loan_trial_balanceWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Loan_trial_balanceScalarFieldEnum | Prisma.Loan_trial_balanceScalarFieldEnum[]
}

/**
 * loan_status.loan_trial_balance_staging
 */
export type loan_status$loan_trial_balance_stagingArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the loan_trial_balance_staging
   */
  select?: Prisma.loan_trial_balance_stagingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the loan_trial_balance_staging
   */
  omit?: Prisma.loan_trial_balance_stagingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.loan_trial_balance_stagingInclude<ExtArgs> | null
  where?: Prisma.loan_trial_balance_stagingWhereInput
  orderBy?: Prisma.loan_trial_balance_stagingOrderByWithRelationInput | Prisma.loan_trial_balance_stagingOrderByWithRelationInput[]
  cursor?: Prisma.loan_trial_balance_stagingWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Loan_trial_balance_stagingScalarFieldEnum | Prisma.Loan_trial_balance_stagingScalarFieldEnum[]
}

/**
 * loan_status without action
 */
export type loan_statusDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the loan_status
   */
  select?: Prisma.loan_statusSelect<ExtArgs> | null
  /**
   * Omit specific fields from the loan_status
   */
  omit?: Prisma.loan_statusOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.loan_statusInclude<ExtArgs> | null
}
